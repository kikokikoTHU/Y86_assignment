	irmovl	$1, %eax	
	irmovl  $1024, %edx	
	mutex	(%edx), %eax	#exchange %eax, (addr_1024)
	irmovl 	$0, %ecx
	subl	%eax, %ecx
	jne	ProgramB	# if(%eax == 0)
ProgramA:	
	irmovl  $1, %ecx	# %ecx = 1

LoopA:	irmovl  $1056, %edx
	mrmovl  (%edx), %eax
	irmovl  $0, %ebx	# M is the value in addr_1056
	subl	%eax, %ebx
	jne	AIFM2		#if(M == 0)
AIFM0:
	irmovl	$1088, %edx	# V is the value in addr_1088
	irmovl  $0, %ebx	# %ebx is the count
AINNER:
	mrmovl	(%edx), %eax
	iaddl	$1,	%eax
	rmmovl	%eax, (%edx)	# set target value +=1
	
	iaddl	$32, %edx
	iaddl	$1, %ebx

	rrmovl	%ecx, %edi
	subl	%ebx, %edi
	jne	AINNER

	irmovl	$1056, %edx	
	irmovl  $1, %eax
	rmmovl  %eax, (%edx)	# set M = 1
	jmp	LoopALast
AIFM2:
	irmovl	$2, %ebx
	subl	%eax, %ebx
	jne	AELSE		# if(M == 2)
				# here can get something
	irmovl	$1056, %edx
	irmovl  $0, %eax
	rmmovl  %eax, (%edx)	# set M = 0
	iaddl	$1, %ecx
	jmp	LoopALast	
AELSE:
LoopALast:
	irmovl  $1025, %eax
	subl	%ecx, %eax	# if(%ecx == 100) to LoopAEnd
	jne	LoopA		# else to LoopA
	jmp	LoopAEnd

LoopAEnd:	
	irmovl	$1, %edx	# %edx = 1 via the first path
	jmp	end

ProgramB:
	irmovl  $1, %ecx	# %ecx = 0

LoopB:	irmovl  $1056, %edx	M is the value in addr_1056
	mrmovl  (%edx), %eax
	irmovl  $1, %ebx	
	
	subl	%eax, %ebx
	jne	BELSE		#if(M == 1)
BIFM1:
	irmovl	$1088, %edx
	irmovl	$0, %ebx
BINNER:
	mrmovl	(%edx), %eax
	iaddl	$1,	%eax
	rmmovl	%eax, (%edx)	# set value +=1

	iaddl	$32, %edx
	iaddl	$1, %ebx

	rrmovl	%ecx, %edi
	subl	%ebx, %edi
	jne	BINNER	

	irmovl	$1056, %edx
	irmovl  $2, %eax
	rmmovl  %eax, (%edx)	# set M = 2
	
	iaddl	$1, %ecx	# %ecx += 1
	jmp	LoopBLast
BELSE:
LoopBLast:			
	irmovl  $1025, %eax
	subl	%ecx, %eax	
	jne	LoopB		# if(%ecx != 1025)	to LoopB
	jmp	LoopBEnd	# else to LoopBEnd
LoopBEnd:
	irmovl	$2, %edx	
	jmp	end		# %edx = 2 via the second path

end:	irmovl	$1024, %edx
	irmovl	$0, %eax
	rmmovl	%eax, (%edx)	# set the value of addr_1024 = 0
